name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Review Prompt
        id: create_prompt
        env:
          REVIEW_PROMPT: |
            You are an expert code reviewer and an autonomous agent. Your task is to provide a detailed review of this pull request.

            **IMPORTANT:** You have access to a shell with a curated set of tools. You MUST use these tools to gather information about the pull request. Do not ask for the information to be provided.

            **Your First Steps:**
            1. Get the pull request number by running: `echo ${{ github.event.pull_request.number }}`
            2. Get the full diff by running: `gh pr diff ${{ github.event.pull_request.number }}`
            3. Get the list of changed files by running: `gh pr diff ${{ github.event.pull_request.number }} --name-only`
            4. For any specific file, you can read its contents, for example: `cat "path/to/file.js"`

            **Review Guidelines:**
            - After gathering information, provide a thorough review.
            - Focus on code quality, security, performance, and maintainability.
            - For this project, also consider the gameplay and user experience.
            - Provide specific, constructive feedback.

            **Output Format:**
            Please structure your feedback using this exact markdown format. If you have no feedback for a section, omit it.

            ---
            ### ðŸŽ® Gameplay & UX
            *(Feedback on the user experience, game feel, and fun factor.)*

            ### ðŸ’¡ Suggestions
            *(Specific suggestions for improvement, including code snippets if helpful.)*
            - **File:** `path/to/file.js:line` - Your detailed suggestion.

            ### âœ¨ Highlights
            *(Point out things you liked about the PR!)*

            ---

            If you have no suggestions at all, respond with the single phrase: "This looks great! No suggestions."
        run: |
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "${REVIEW_PROMPT}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Temporary Settings
        run: |
          echo '{
            "coreTools": [
              "run_shell_command(echo)",
              "run_shell_command(gh pr diff)",
              "run_shell_command(cat)",
              "run_shell_command(head)",
              "run_shell_command(tail)",
              "run_shell_command(grep)"
            ],
            "telemetry": {"enabled": false}
          }' > workflow-settings.json

      - name: Run Gemini CLI for Review
        id: gemini_review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install -g @google/gemini-cli
          
          REVIEW=$(gemini -p "${{ steps.create_prompt.outputs.prompt }}" --settings workflow-settings.json)
          
          echo "review<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Post Review Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! grep -q "This looks great! No suggestions." <<< "${{ steps.gemini_review.outputs.review }}"; then
            gh pr comment ${{ github.event.pull_request.number }} --body "${{ steps.gemini_review.outputs.review }}"
          fi
