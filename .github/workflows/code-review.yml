name: AI Code Review

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      pull_request_number:
        description: 'The number of the pull request to review'
        required: true

permissions:
  pull-requests: write
  actions: read
  contents: read

jobs:
  review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine PR Number
        id: pr_number
        run: |
          if [ -n "${{ github.event.inputs.pull_request_number }}" ]; then
            echo "pr_number=${{ github.event.inputs.pull_request_number }}" >> $GITHUB_OUTPUT
          else
            echo "pr_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Build Context Packet
        id: context_packet
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: ./scripts/build-context.sh ${{ steps.pr_number.outputs.pr_number }}

      - name: DEBUG - Show Context Packet
        run: echo "${{ steps.context_packet.outputs.context }}"

      - name: Create Review Prompt
        id: create_prompt
        env:
          REVIEW_PROMPT: |
            You are an expert code reviewer. Your task is to provide a detailed review of this pull request.

            **IMPORTANT:** You have been provided with a complete "context packet" that includes both the pull request diff and the full content of every changed file. Rely *only* on this context to perform your review.

            **Review Guidelines:**
            - Focus on code quality, security, performance, and maintainability.
            - For this project, also consider the gameplay and user experience.
            - Provide specific, constructive feedback.

            **Output Format:**
            Please structure your feedback using this exact markdown format. If you have no feedback for a section, omit it.

            ---
            ### ðŸŽ® Gameplay & UX
            *(Feedback on the user experience, game feel, and fun factor.)*

            ### ðŸ’¡ Suggestions
            *(Specific suggestions for improvement, including code snippets if helpful.)*
            - **File:** `path/to/file.js:line` - Your detailed suggestion.

            ### âœ¨ Highlights
            *(Point out things you liked about the PR!)*

            ---

            If you have no suggestions at all, respond with the single phrase: "This looks great! No suggestions."

            Here is the context packet:
        run: |
          echo "prompt<<EOF" >> $GITHUB_OUTPUT
          echo "${REVIEW_PROMPT}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Gemini CLI for Review
        id: gemini_review
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Create the .gemini directory
          mkdir -p .gemini

          # Temporarily create the settings file to disable telemetry
          echo '{
            "telemetry": {"enabled": false}
          }' > .gemini/settings.json

          npm install -g @google/gemini-cli
          
          # Pipe the context and prompt to the gemini command
          printf "%s\n\n%s" "${{ steps.create_prompt.outputs.prompt }}" "${{ steps.context_packet.outputs.context }}" | gemini > review.md

      - name: Upload Review Artifact
        uses: actions/upload-artifact@v4
        with:
          name: review
          path: review.md

      - name: Post Review Comment
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
        run: |
          if ! grep -q "This looks great! No suggestions." review.md; then
            gh pr comment ${{ steps.pr_number.outputs.pr_number }} --body-file review.md
          fi